begin_problem(Agatha).

list_of_descriptions.
name({**}).
author({**}).
status(unsatisfiable).
description({**}).
end_of_list.

list_of_symbols.
  functions[(agatha, 0), (butler, 0), (charles, 0)].
  predicates[(hates,2), (killed,2), (lives,1), (richer,2)].
end_of_list.

list_of_formulae(axioms).

formula(exists([x],and(lives(x),killed(x,agatha)))).

formula(lives(agatha)).
formula(lives(butler)).
formula(lives(charles)).

formula(forall([x],implies(lives(x),or(equal(x,agatha),equal(x,butler),equal(x,charles))))).

formula(forall([x,y],implies(killed(x,y),hates(x,y)))).

formula(forall([x,y],implies(killed(x,y),not(richer(x,y))))).

formula(forall([x],implies(hates(agatha,x),not(hates(charles,x))))).

formula(and(not(hates(agatha,butler)),forall([x],implies(not(equal(x,butler)),hates(agatha,x))))).

formula(forall([x],implies(not(richer(x,agatha)),hates(butler,x)))).

formula(forall([x],implies(hates(agatha,x),hates(butler,x)))).

formula(forall([x],exists([y],not(hates(x,y))))).

formula(not(equal(agatha,butler))).

end_of_list.

list_of_formulae(conjectures).

formula(kill(agatha, agatha)).

end_of_list.

end_problem.
  